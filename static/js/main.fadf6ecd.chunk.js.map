{"version":3,"sources":["Components/Alerts/Context/AlertContext.js","Components/Alerts/HOC/withAlert.js","Components/Alerts/Alert.js","Components/Layout/SubmitButton.js","Components/PresentationPage/Title.js","Components/Miscelaneous/ResourceLink.js","Components/PresentationPage/Members/MembersData.js","Components/PresentationPage/Members/Member.js","Components/PresentationPage/Members/Members.js","Components/PresentationPage/PresentationPage.js","Components/Sequence/Sequence.js","Components/Charts/Chart.js","Classes/FFT/BaseAlgorithm.js","Classes/FFT/FFT.js","Classes/FFT/IFFT.js","Classes/FFT/AlgorithmFactory.js","Components/FunctionPreview/Charts/SequencesChart.js","Context/Result/ResultContext.js","Context/Result/HOC/withResult.js","Components/Result/Result.js","Components/InputSequence/Fields/InputSequenceField.js","Components/InputSequence/InputSequence.js","Context/InputSequence/SequenceContext.js","Context/InputSequence/HOC/withContextConsumer.js","Components/InputSequence/InputSequenceContainer.js","Components/FunctionPreview/FunctionPreview.js","Components/FunctionPreview/FunctionPreviewContainer.js","Routes.js","Components/Layout/Navigation/Navbar.js","Components/Alerts/HOC/withAlertProvider.js","Context/Result/HOC/withResultProvider.js","Context/InputSequence/HOC/withContextProvider.js","App.js","index.js"],"names":["AlertContext","React","createContext","withAlert","WrappedComponent","props","useContext","alert","setAlert","children","useState","showAlert","setShowAlert","type","message","duration","useEffect","alertDuration","setTimeout","hideAndClearAlert","className","role","SubmitButton","onClick","Title","src","height","width","ResourceLink","href","openInSameWindow","target","members","josue","name","avatar","github","damian","vladimir","Member","memberId","member","Members","withRouter","history","event","preventDefault","push","Sequence","label","sequence","map","item","index","toString","length","Chart","id","title","color","origin","lineTension","chartCanvas","useRef","canvasContext","current","getContext","console","log","graphType","ChartJS","data","labels","calculateLabels","datasets","borderWidth","borderColor","backgroundColor","options","scales","yAxes","ticks","beginAtZero","xAxes","barPercentage","calculateBarWidth","gridLines","drawOnChartArea","display","text","Array","from","emptyLabel","ref","BaseAlgorithm","inputSamples","this","numberOfSamples","samples","filter","sample","inverse","weighing","realExponentPart","Math","PI","exponent","Complex","exp","half","w","getWn","wn","even","getEven","odd","getOdd","sequenceEven","algorithm","sequenceOdd","resultSequence","fill","iterator","weightedOddSequence","mul","add","sub","result","FFT","partialResult","round","getNormalizedResult","IFFT","coefficient","AlgorithmFactory","getSamples","split","Number","isInteger","log2","operation","isValidInput","SequencesCharts","complexSequence","r","floor","random","g","b","getRandomColor","ResultContext","withResult","location","restProps","setResult","missingCalculations","pathname","inputSequence","SequencesChart","re","abs","FunctionInputField","placeholder","onChange","rest","FunctionInput","handleSubmit","handleOperationChange","handleInputSequenceChange","value","InputSequenceField","SequenceContext","withContextConsumer","WithAlerts","showDefaultAlert","setShowDefaultAlert","setSequence","sequenceNotDefined","algorithmInstance","sequenceOperation","setOperation","setInputSequence","notifySequenceError","errorMessage","redirectToPreview","InputSequence","algorithmToUse","create","FunctionPreview","redirect","setRedirect","realSequence","setRealSequence","redirectToResults","getRealSequence","calculate","Routes","path","exact","strict","InputSequenceContainer","Navbar","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","withAlertProvider","initialAlertState","Provider","withResultProvider","initialState","withContextProvider","WithRouter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fadf6ecd.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nlet AlertContext = React.createContext();\r\n\r\nexport default AlertContext;\r\n\r\n","import React, { useContext, useEffect } from 'react';\r\n//Context\r\nimport AlertContext from '../Context/AlertContext';\r\n\r\nconst withAlert = WrappedComponent => {\r\n    const WithAlert = props => {\r\n        let [alert, setAlert] = useContext(AlertContext);\r\n\r\n        return(\r\n            <WrappedComponent\r\n                alert = { alert }\r\n                setAlert = { setAlert }\r\n                { ...props }\r\n            />\r\n        )\r\n    }\r\n\r\n    return WithAlert;\r\n}\r\n\r\nexport default withAlert;","import React, { useEffect, useState } from 'react';\r\nimport withAlert from './HOC/withAlert';\r\n\r\nconst Alert = ({ alert, children, setAlert }) => {\r\n    //State\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    //Props\r\n    let { type, message, duration } = alert;\r\n    //Constantes\r\n    const DEFAULT_ALERT_TIME = 3000;\r\n\r\n\r\n    useEffect(() => {\r\n        setShowAlert(false);\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        let alertDuration = duration || DEFAULT_ALERT_TIME;\r\n        if(alert.message){\r\n            setShowAlert(true);\r\n            setTimeout(hideAndClearAlert, alertDuration);\r\n        }\r\n    }, [alert.message]);\r\n\r\n    const hideAndClearAlert = () => {\r\n        setShowAlert(false);\r\n        setAlert({\r\n            type: '',\r\n            message: '',\r\n            duration: null\r\n        });\r\n    }\r\n\r\n    const getDisplayType = () => {\r\n        return showAlert ? 'd-block' : 'd-none';\r\n    }\r\n\r\n    return(\r\n        <div className={ `alert alert-${ type || 'danger' } rounded-lg shadow ${ getDisplayType() }` } role='alert'>\r\n            { message }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default withAlert(Alert);","import React from 'react';\r\n\r\nconst SubmitButton = ({ onClick, children }) => (\r\n    <div className='form-group text-center'>\r\n        <button\r\n            onClick = { onClick }\r\n            className = 'btn btn-outline-primary rounded-lg shadow'\r\n        >\r\n            { children }\r\n        </button>\r\n\r\n    </div>\r\n);\r\n\r\nexport default SubmitButton;","import React, { Fragment } from 'react';\r\n\r\nconst Title = () => (\r\n    <Fragment>\r\n        <div className='d-flex flex-row justify-content-around'>\r\n            <div>\r\n                <img src='https://www.encb.ipn.mx/assets/files/encb/img/escudos/logo-ipn.png' height='100px' width='100px' />\r\n            </div>\r\n            <div>\r\n                <h2>Instituto Politécnico Nacional</h2>\r\n                <h3>Escuela Superior de Cómputo</h3>\r\n            </div>\r\n            <div>\r\n                <img src='https://www.escom.ipn.mx/images/logoESCOM2x.png' height='100px' width='100px' />\r\n            </div>\r\n        </div>\r\n        <hr/>\r\n        <div className='my-4'>\r\n            <h4>Práctica 3: FFT e IFFT de secuencias</h4>\r\n            <img src='https://img.pngio.com/matching-algorithm-png-skratch-algorithm-png-512_512.png' height='100px' width='100px' />\r\n        </div>\r\n    </Fragment>\r\n);\r\n\r\nexport default Title;","import React from 'react';\r\n\r\nconst ResourceLink = ({ children, href, openInSameWindow }) => (\r\n    <a\r\n        href = { href }\r\n        target = { openInSameWindow ? 'self' : 'blank' }\r\n        className = 'text-decoration-none text-muted'\r\n    >\r\n        { children }\r\n    </a>\r\n);\r\n\r\nexport default ResourceLink;","\r\nlet members = {\r\n    josue: {\r\n        name: 'Josue David Hernández Ramírez',\r\n        avatar: 'https://avatars0.githubusercontent.com/u/8957173?s=460&v=4',\r\n        github: 'https://github.com/JosueHernandezR',\r\n    },\r\n    damian: {\r\n        name: 'Damián Alanís Ramírez',\r\n        avatar: 'https://avatars1.githubusercontent.com/u/5724479?s=460&u=ac1cb8e67e18ebd3a92c1f0432e814f4b82f4f55&v=4',\r\n        github: 'https://github.com/d-alanis98',\r\n    },\r\n    vladimir:{\r\n        name: 'Vladimir Azpetia Rodríguez',\r\n        avatar: 'https://avatars0.githubusercontent.com/u/24665258?s=460&u=823e5aea71fa80796a2da5a0aebd8fb7fa2818c5&v=4',\r\n        github: 'https://github.com/VladimirAh'\r\n    }\r\n}\r\nexport default members;","import React from 'react';\r\n//Components\r\nimport ResourceLink from '../../Miscelaneous/ResourceLink';\r\n//Datasource\r\nimport Members from './MembersData';\r\n\r\n\r\nconst Member = ({ memberId, className }) => {\r\n    const member = Members[memberId];\r\n\r\n    return(\r\n        <div className={ `card bg-members border-0 rounded-lg ${ className }` }>\r\n            <div className='card-img'>\r\n                <ResourceLink\r\n                    href = { member.github }\r\n                >\r\n                    <img src={ member.avatar } className='rounded-lg my-3' height='60px' />\r\n                </ResourceLink>             \r\n            </div>\r\n            <div className='card-body'>\r\n                <ResourceLink\r\n                    href = { member.github }\r\n                >\r\n                    { member.name }\r\n                </ResourceLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Member;","import React from 'react';\r\nimport Member from './Member';\r\n\r\nconst Members = () => (\r\n    <div className='my-3 py-3'>\r\n        <h5>Integrantes:</h5>\r\n        <div className='d-flex flex-row justify-content-center w-100'>\r\n            <Member\r\n                memberId = 'damian'\r\n            />\r\n            <Member\r\n                memberId = 'josue'\r\n                className = 'ml-3'\r\n            />\r\n            <Member\r\n                memberId = 'vladimir'\r\n                className = 'ml-3'\r\n            />\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Members;","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport SubmitButton from '../Layout/SubmitButton';\r\nimport Title from './Title';\r\nimport Members from './Members/Members';\r\n\r\nconst PresentationPage = ({ history }) => {\r\n\r\n    const handleClick = event => {\r\n        event.preventDefault();\r\n        history.push('/start')\r\n    }\r\n    return(\r\n        <div className='container text-center mt-3 py-4 text-main'>\r\n            <Title />\r\n            <Members />\r\n            <SubmitButton\r\n                onClick = { handleClick }\r\n            >\r\n                Comenzar\r\n            </SubmitButton>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default withRouter(PresentationPage);","import React, { Fragment } from 'react';\r\n\r\nconst Sequence = ({ label, sequence }) => {\r\n\r\n    const printSequence = () => {\r\n        return sequence.map((item, index) => \r\n            <span>\r\n                <em className='text-muted font-weight-bold'>{ item.toString() }</em>\r\n                { index < sequence.length - 1 ? ', ' : ''}\r\n            </span>\r\n        )\r\n    }\r\n    return(\r\n        <Fragment>\r\n            <h6>{ label }</h6>\r\n            <p>[{ printSequence() }]</p>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Sequence;","import React, { useEffect, useRef } from 'react';\r\nimport { Chart as ChartJS } from 'chart.js';\r\n//Estilos\r\nimport './Chart.css';\r\n\r\nconst Chart = ({ id, title, label, color, origin, type, sequence, lineTension }) => {\r\n    //Constantes\r\n    const DEFAULT_ID     = 'test';\r\n    const DEFAULT_TYPE   = 'bar';\r\n    const DEFAULT_COLOR  = 'rgba(255, 0, 255, 0.5)';\r\n    const DEFAULT_LABEL  = 'Valores';\r\n\r\n    //HOOKS\r\n    //Ref\r\n    const chartCanvas = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const canvasContext = chartCanvas.current.getContext('2d');\r\n        let progress = {}\r\n        console.log({ graphType: type})\r\n        new ChartJS(canvasContext, {\r\n            type: type || DEFAULT_TYPE,\r\n            data: {\r\n                labels: calculateLabels(),\r\n                datasets: [\r\n                    {\r\n                        label: label || DEFAULT_LABEL,\r\n                        data: sequence,\r\n                        borderWidth: 2,\r\n                        lineTension: lineTension,\r\n                        borderColor: color ? `rgba(${color}, 1)` : DEFAULT_COLOR,\r\n                        backgroundColor: color ? `rgba(${color}, 0.4)` : DEFAULT_COLOR,\r\n                        \r\n                    }\r\n                ],\r\n            },\r\n            options: {\r\n                scales: {\r\n                    yAxes: [{\r\n                        ticks: {\r\n                            beginAtZero : true\r\n                        },\r\n                    }],\r\n                    xAxes: [{\r\n                        barPercentage: calculateBarWidth(),\r\n                        gridLines: {\r\n                            drawOnChartArea: false\r\n                        }\r\n                    }]\r\n                },\r\n                title: {\r\n                    display: title ? true : false,\r\n                    text: title\r\n                },\r\n                \r\n            },\r\n\r\n        });\r\n    }, [sequence]);\r\n\r\n    const calculateLabels = () => {\r\n        let labels = new Array(sequence.length);\r\n        console.log({ labels })\r\n        return Array.from(labels).map((emptyLabel, index) => index - origin)\r\n    }\r\n\r\n    const calculateBarWidth = () => {\r\n        return 0.009 * sequence.length; \r\n    }\r\n    return(\r\n        <div>\r\n            <canvas \r\n                id = { id || DEFAULT_ID }\r\n                ref = { chartCanvas }\r\n\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import Complex from 'complex.js';\r\n\r\nexport default class BaseAlgorithm{\r\n    /**\r\n     * @param {Complex[]} inputSamples \r\n     */\r\n    constructor(inputSamples){\r\n        this.inputSamples = inputSamples;\r\n        this.numberOfSamples = this.inputSamples.length;\r\n    }\r\n\r\n\r\n    getEven(samples){\r\n        return samples.filter((sample, index) => index % 2 === 0);\r\n    }\r\n\r\n    getOdd(samples){\r\n        return samples.filter((sample, index) => index % 2 !== 0);\r\n    }\r\n\r\n    getWn(numberOfSamples, inverse = false){\r\n        //Para la IFFT Wn = 2ipi/N, para la FFT Wn = -2ipi/N\r\n        let weighing = inverse ? 1 : -1; \r\n        let realExponentPart = (2 * weighing * Math.PI) / numberOfSamples; //(-1|1)*2*pi/N\r\n        let exponent = new Complex(0, realExponentPart); //realExponentPart * i (-2ipi/N)\r\n        return exponent.exp(); //e^-2ipi/N\r\n    }\r\n\r\n    algorithm(samples, inverse = false){\r\n        //Obtenemos el número de muestras (N)\r\n        let numberOfSamples = samples.length\r\n        //Obtenemos el índice que indica la mitad, considerando que N siempre será potencia de 2\r\n        let half = numberOfSamples / 2 \r\n        //Caso base, donde solo tenemos 1 elemento, entonces simplemente lo retorna\r\n        if(numberOfSamples == 1)\r\n            return samples\r\n        //Obtenemos el peso w^1 de la secuencia\r\n        let w = this.getWn(numberOfSamples, inverse)\r\n        //Declaramos la variable que contendrá el acumulador de pesos para cada iteración\r\n        let wn = new Complex(1, 0) //Inicializado en 1 (w^0)\r\n        //Se separa el array en pares e impares\r\n        let even = this.getEven(samples) \r\n        let odd = this.getOdd(samples)\r\n        //Se obtiene cada mitad por el método de divide y vencerás (para formar la mariposa posteriormente)\r\n        let sequenceEven = this.algorithm(even)\r\n        let sequenceOdd = this.algorithm(odd)\r\n        //Llenamos un array de tamaño N de ceros (de tipo complejo, 0 + 0j)\r\n        let resultSequence = new Array(numberOfSamples).fill(new Complex(0, 0));\r\n        //Ciclo para formar la mariposa y efectuar las operaciones en esta\r\n        for(let iterator = 0; iterator < half; iterator++){\r\n            //Obtenemos wn * fft(pares)\r\n            let weightedOddSequence = sequenceOdd[iterator].mul(wn);\r\n            //Primera mitad\r\n            //De 0 a N/2 es fft(impares) + wn*fft(pares) \r\n            resultSequence[iterator] = sequenceEven[iterator].add(weightedOddSequence);\r\n            //Segunda mitad\r\n            //De N/2 a N es fft(impares) - wn*fft(pares)\r\n            resultSequence[iterator + half] = sequenceEven[iterator].sub(weightedOddSequence); //Le restamos wn * fft(pares), ya que la parte par tiene una ponderación de -wn\r\n            wn = wn.mul(w) //Se va acumulando wn, ya que en cada iteración w se eleva a la potencia iterator, esto sería lo mismo que wn = w ^ iterator\r\n        }\r\n\r\n        return resultSequence  \r\n    }\r\n\r\n    calculate(){\r\n        let result  = this.algorithm(this.inputSamples);\r\n        console.log(result.toString())\r\n        return result\r\n    }\r\n}","import Complex from 'complex.js';\r\nimport BaseAlgorithm from './BaseAlgorithm';\r\n\r\nexport default class FFT extends BaseAlgorithm{\r\n    constructor(inputSamples){\r\n        super(inputSamples);\r\n    }\r\n\r\n    getNormalizedResult(partialResult){\r\n        return partialResult.map(item => item.round(3));\r\n    }\r\n\r\n    calculate(){\r\n        let partialResult = this.algorithm(this.inputSamples);\r\n        let result = this.getNormalizedResult(partialResult);\r\n        return result;\r\n    }\r\n}","import BaseAlgorithm from \"./BaseAlgorithm\";\r\nimport Complex from \"complex.js\";\r\n\r\nexport default class IFFT extends BaseAlgorithm{\r\n    constructor(inputSamples){\r\n        super(inputSamples);\r\n    }\r\n\r\n    getNormalizedResult(partialResult){\r\n        //El coeficiente 1/N que multiplica a cada elemento del vector resultado\r\n        let coefficient =  new Complex(1 / this.numberOfSamples);\r\n        //Retornamos una copia del array de resultado parcial con cada item multiplicado por 1/N y con sus 3 posiciones decimales redondeadas\r\n        return partialResult.map(item => coefficient.mul(item).round(3));\r\n    }\r\n\r\n\r\n    calculate(){\r\n        let partialResult = this.algorithm(this.inputSamples, true);\r\n        let result = this.getNormalizedResult(partialResult);\r\n        return result;\r\n    }\r\n}","import Complex from 'complex.js';\r\n//Clases\r\nimport FFT from './FFT';\r\nimport IFFT from './IFFT';\r\n\r\nexport default class AlgorithmFactory{\r\n    //Constantes\r\n    static FFT = 'FFT';\r\n    static IFFT = 'IFFT';\r\n\r\n    //Constructor\r\n    constructor(inputSamples){\r\n        this.inputSamples = this.getSamples(inputSamples);\r\n        this.numberOfSamples = this.inputSamples.length;\r\n    }\r\n\r\n    getSamples(inputSamples){\r\n        let samples = inputSamples.split(',');\r\n        return samples.map(sample => Complex(sample));\r\n    }\r\n\r\n    /**\r\n     * Determina si la secuencia introducida tiene 2^n elementos\r\n     */\r\n    isValidInput(){\r\n        return Number.isInteger(Math.log2(this.numberOfSamples)) ? true : false;\r\n    }\r\n\r\n    //Creación del algoritmo correspondiente\r\n    create(operation){\r\n        //Validamos que la secuencia sea de tamaño 2^n\r\n        if(!this.isValidInput())\r\n            return null;\r\n        //Devolvemos la instancia de acuerdo con la operación deseada\r\n        switch(operation){\r\n            case AlgorithmFactory.FFT:\r\n                return new FFT(this.inputSamples);\r\n            case AlgorithmFactory.IFFT:\r\n                return new IFFT(this.inputSamples);\r\n            default:\r\n                return new FFT(this.inputSamples);\r\n        }\r\n    }\r\n}","import React from 'react';\r\n//Componentes\r\nimport Chart from '../../Charts/Chart';\r\nimport Sequence from '../../Sequence/Sequence';\r\nimport AlgorithmFactory from '../../../Classes/FFT/AlgorithmFactory';\r\n\r\nconst SequencesCharts = ({ label, sequence, complexSequence, operation }) => {\r\n\r\n    console.log({ sequence })\r\n\r\n    const getRandomColor = () => {\r\n        let r = Math.floor(Math.random() * 256);  \r\n        let g = Math.floor(Math.random() * 256);         \r\n        let b = Math.floor(Math.random() * 256);  \r\n        return `${r}, ${g}, ${b}`;        \r\n    }\r\n    return (\r\n        <div className='container'>\r\n            <Sequence\r\n                label = { label || 'Secuencia: ' }\r\n                sequence = { complexSequence }\r\n            />\r\n            <Chart\r\n                id = 'first_sequence_chart'\r\n                type = { operation === AlgorithmFactory.FFT ? 'bar' : 'line' }\r\n                label = 'Secuencia 1'\r\n                color = { getRandomColor() }\r\n                origin = { 0 }\r\n                sequence = { sequence } \r\n                lineTension = { operation === AlgorithmFactory.FFT ? 10 : 0 }\r\n\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SequencesCharts;","import React from 'react';\r\n\r\nlet ResultContext = React.createContext();\r\n\r\nexport default ResultContext;","import React, { useContext, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n//Context\r\nimport ResultContext from '../ResultContext';\r\n//HOC\r\nimport withAlert from '../../../Components/Alerts/HOC/withAlert';\r\n\r\n\r\n\r\nconst withResult = WrappedComponent => {\r\n    const WithResult = ({ history, location, setAlert, ...restProps }) => {\r\n        let [result, setResult] = useContext(ResultContext);\r\n\r\n        useEffect(() => {\r\n            if(missingCalculations()){\r\n                setAlert({\r\n                    type: 'danger',\r\n                    message: 'El resultado no ha sido calculado'\r\n                })\r\n                history.push('/preview')\r\n            }\r\n        }, [result])\r\n\r\n        const missingCalculations = () => location.pathname !== '/preview' && result.resultSequence.length === 0;\r\n\r\n        if(missingCalculations())\r\n            return null;\r\n        return <WrappedComponent \r\n                    result = { result }\r\n                    sequence = { result.resultSequence }\r\n                    operation = { result.operation }\r\n                    setResult = { setResult }\r\n                    inputSequence = { result.inputSequence }\r\n                    { ...restProps }\r\n                /> \r\n    }\r\n\r\n    return withRouter(withAlert(WithResult));\r\n}\r\n\r\nexport default withResult;","import React from 'react';\r\n//Componentes\r\nimport Sequence from '../Sequence/Sequence';\r\nimport SequencesChart from '../FunctionPreview/Charts/SequencesChart';\r\n//HOC\r\nimport withResult from '../../Context/Result/HOC/withResult';\r\n//Clases\r\nimport AlgorithmFactory from '../../Classes/FFT/AlgorithmFactory';\r\n\r\n\r\nconst Result = ({ sequence, operation, inputSequence }) => {\r\n    const getRealSequence = () => {\r\n        if(operation === AlgorithmFactory.FFT)\r\n            return sequence.map(sample => sample.re);\r\n        else return sequence.map(sample => sample.abs());\r\n    }\r\n    return(\r\n        <div className='container text-center'>\r\n            <h2>Resultados</h2>\r\n            <Sequence \r\n                label = 'Secuencia de entrada:'\r\n                sequence = { inputSequence }\r\n            />\r\n            <hr />\r\n            <SequencesChart \r\n                label = 'Secuencia de resultado: '\r\n                sequence = { getRealSequence() }\r\n                operation = { operation }\r\n                complexSequence = { sequence }\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withResult(Result);\r\n\r\n","import React from 'react';\r\n\r\nconst FunctionInputField = ({ id, name, type, label, placeholder, onChange, ...rest }) => {\r\n\r\n    const handleChange = event => {\r\n        if(onChange && typeof(onChange) === 'function')\r\n            onChange(event);\r\n    }\r\n\r\n    return(\r\n        <div className='form-group text-left'>\r\n            <label>{ label }</label>\r\n            <input\r\n                id = { id }\r\n                name = { name }\r\n                type = { type || 'text' }\r\n                onChange = { handleChange }\r\n                className = 'form-control'\r\n                placeholder = { placeholder }\r\n                { ...rest }\r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FunctionInputField;","import React from 'react';\r\n//Componentes\r\nimport SubmitButton from '../Layout/SubmitButton';\r\nimport InputSequenceField from './Fields/InputSequenceField';\r\n//Clases\r\nimport AlgorithmFactory from '../../Classes/FFT/AlgorithmFactory';\r\n\r\n\r\nconst FunctionInput = ({ sequence, operation, handleSubmit, handleOperationChange, handleInputSequenceChange }) => (\r\n    <div className='container text-center text-main mt-3 py-4'>\r\n        <h3>1. Seleccione el tipo de operación</h3>\r\n        <div className='form-group'>\r\n            <select \r\n                value = { operation }\r\n                onChange = { handleOperationChange }\r\n                className = 'form-control' \r\n            >\r\n                <option value={ AlgorithmFactory.FFT }>FFT</option>\r\n                <option value={ AlgorithmFactory.IFFT }>IFFT</option>\r\n            </select>\r\n        </div>\r\n        <h3>2. Introducir secuencia</h3>\r\n        <InputSequenceField\r\n            name = 'firstFunction'\r\n            label = 'Secuencia: '\r\n            value = { sequence }\r\n            onChange = { handleInputSequenceChange }\r\n            placeholder = 'Introducir los numeros separados por comas'\r\n        />\r\n        <hr />\r\n        <SubmitButton\r\n            onClick = { handleSubmit }\r\n        >\r\n            { 'Avanzar'  }\r\n        </SubmitButton>\r\n    </div>\r\n)\r\n\r\n\r\nexport default FunctionInput;","import React from 'react';\r\n\r\nlet SequenceContext = React.createContext();\r\n\r\nexport default SequenceContext;","import React, { useContext, useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n//Context\r\nimport SequenceContext from '../SequenceContext';\r\n//HOC\r\nimport withAlert from '../../../Components/Alerts/HOC/withAlert';\r\n\r\n\r\nconst withContextConsumer = WrappedComponent => {\r\n    const WithContextConsumer = props => {\r\n        //HOOKS\r\n        //State\r\n        const [showDefaultAlert, setShowDefaultAlert] = useState(true);\r\n        //Context\r\n        let [sequence, setSequence] = useContext(SequenceContext)\r\n        \r\n        //PROPS\r\n        let { location, history, setAlert } = props;\r\n\r\n        useEffect(() => {\r\n            if(sequenceNotDefined()){\r\n                showDefaultAlert && setAlert({\r\n                    type: 'danger',\r\n                    message: 'No se han definido las funciones'\r\n                });\r\n                history.push('/start');\r\n            }\r\n        }, [sequence])\r\n\r\n        const sequenceNotDefined = () => location.pathname !== '/start' && !sequence.sequence;\r\n\r\n        if(sequenceNotDefined())\r\n            return null;\r\n\r\n        return <WrappedComponent\r\n                    sequence = { sequence.sequence }\r\n                    setAlert = { setAlert }\r\n                    operation = { sequence.operation }\r\n                    setSequence = { setSequence }\r\n                    showDefaultAlert = { setShowDefaultAlert }\r\n                    algorithmInstance = { sequence.algorithmInstance }\r\n                    { ...props }\r\n                />\r\n    }\r\n    //Decoramos con HOC de alertas\r\n    let WithAlerts = withAlert(WithContextConsumer);\r\n    //Decoramos con el HOC de router\r\n    let WithRouter = withRouter(WithAlerts); \r\n    //Retornamos el componente decorado\r\n    return WithRouter;\r\n}\r\n\r\nexport default withContextConsumer;","import React, { useState, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n//Componentes\r\nimport InputSequence from './InputSequence';\r\n//HOC\r\nimport withContextConsumer from '../../Context/InputSequence/HOC/withContextConsumer';\r\n//Clases\r\nimport AlgorithmFactory from '../../Classes/FFT/AlgorithmFactory';\r\n\r\nconst FunctionInputContainer = ({ history, alert, sequence, operation: sequenceOperation, setAlert, setSequence }) => {\r\n    //Constantes\r\n    const SEQUENCE_LENGTH = 'La secuencia debe ser de tamaño 2^n con n > 0'\r\n    const SEQUENCE_UNDEFINED = 'Se debe proporcionar la secuencia';\r\n    //Hooks\r\n    const [operation, setOperation] = useState();\r\n    const [inputSequence, setInputSequence] = useState();\r\n\r\n    //Efectos\r\n    useEffect(() => {\r\n        //Se recuperan los valores establecidos en el contexto\r\n        console.log({ sequence, sequenceOperation })\r\n        setOperation(sequenceOperation);\r\n        setInputSequence(sequence);\r\n    }, [])\r\n\r\n    const saveParameters = algorithmInstance => {\r\n        setSequence({\r\n            sequence: inputSequence,\r\n            operation: operation,\r\n            algorithmInstance: algorithmInstance\r\n        });\r\n    }\r\n\r\n    const notifySequenceError = errorMessage => {\r\n        setAlert({\r\n            type: 'danger',\r\n            message: errorMessage,\r\n            duration: 5000\r\n        });\r\n    }\r\n\r\n    //HANDLERS \r\n\r\n    const handleOperationChange = event => {\r\n        let { value } = event.target;\r\n        setOperation(value);\r\n    }\r\n\r\n    const handleInputSequenceChange = event => {\r\n        let { value } = event.target;\r\n        setInputSequence(value);\r\n    }\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        if(!inputSequence){\r\n            notifySequenceError(SEQUENCE_UNDEFINED);\r\n            return;\r\n        }\r\n        let algorithmFactory = new AlgorithmFactory(inputSequence);\r\n        let algorithmToUse = algorithmFactory.create(operation);\r\n        //Si obtenemos una instancia nula esto se debe a que la entrada no satisface los requerimentos (ser de tamaño 2^n)\r\n        if(!algorithmToUse){\r\n            notifySequenceError(SEQUENCE_LENGTH);\r\n            return;\r\n        }\r\n        saveParameters(algorithmToUse);\r\n        redirectToPreview();\r\n    }\r\n\r\n    const redirectToPreview = () => {\r\n        history.push('/preview');\r\n    }\r\n\r\n\r\n    return <InputSequence\r\n                sequence = { inputSequence }\r\n                operation = { operation }\r\n                handleSubmit = { handleSubmit }\r\n                algorithmInstance = { sequence.algorithmInstance }\r\n                handleOperationChange = { handleOperationChange }\r\n                handleInputSequenceChange = { handleInputSequenceChange }\r\n            />\r\n}\r\n\r\nexport default withContextConsumer(withRouter(FunctionInputContainer));","import React from 'react';\r\n//Componentes\r\nimport SubmitButton from '../Layout/SubmitButton';\r\nimport SequencesChart from './Charts/SequencesChart';\r\n\r\nconst FunctionPreview = ({ sequence, operation, complexSequence, handleSubmit }) => (\r\n    <div className='container text-center mt-3 py-3'>\r\n        <h3>Preview de las secuencias</h3>\r\n        <hr/>\r\n        <SequencesChart\r\n            sequence = { sequence }\r\n            operation = { operation }\r\n            complexSequence = { complexSequence }\r\n        />\r\n\r\n        <SubmitButton\r\n            onClick = { handleSubmit }\r\n        >\r\n            Calcular { operation }\r\n        </SubmitButton>\r\n    </div>\r\n);\r\n\r\nexport default FunctionPreview;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n//Componentes\r\nimport FunctionPreview from './FunctionPreview';\r\n//HOC\r\nimport withResult from '../../Context/Result/HOC/withResult';\r\nimport withContextConsumer from '../../Context/InputSequence/HOC/withContextConsumer';\r\n//Clases\r\nimport AlgorithmFactory from '../../Classes/FFT/AlgorithmFactory';\r\n\r\n\r\n\r\n\r\nconst FunctionPreviewContainer = ({ result, history, operation, setResult, algorithmInstance }) => {\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [realSequence, setRealSequence] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if(result.resultSequence.length > 0 && redirect){\r\n            redirectToResults();\r\n        }\r\n    }, [redirect, result])\r\n\r\n    useEffect(() => {\r\n        if(algorithmInstance){\r\n            setRealSequence(getRealSequence());\r\n        }\r\n    }, [algorithmInstance]);\r\n\r\n    const handleSubmit = event => {\r\n        setRedirect(true);\r\n        let result = algorithmInstance.calculate();\r\n        console.log({ result })\r\n        setResult({\r\n            operation: operation === AlgorithmFactory.FFT ? AlgorithmFactory.IFFT : AlgorithmFactory.FFT,\r\n            inputSequence: algorithmInstance.inputSamples,\r\n            resultSequence: result\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Retorna un array compuesto por la magnitud de cada item del array (que son números complejos)\r\n     */\r\n    const getRealSequence = () => {\r\n        if(operation === AlgorithmFactory.FFT)\r\n            return algorithmInstance.inputSamples.map(sample => sample.re);\r\n        else return algorithmInstance.inputSamples.map(sample => sample.abs());\r\n    }\r\n\r\n    const redirectToResults = () => {\r\n        history.push('/result');\r\n    }\r\n\r\n    \r\n    return <FunctionPreview\r\n                sequence = { realSequence }\r\n                operation = { operation }\r\n                handleSubmit = { handleSubmit } \r\n                complexSequence = { algorithmInstance.inputSamples }\r\n            />\r\n            \r\n\r\n}\r\n\r\nexport default withContextConsumer(withResult(withRouter(FunctionPreviewContainer)));","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport PresentationPage from './Components/PresentationPage/PresentationPage';\r\nimport Result from './Components/Result/Result';\r\nimport InputSequenceContainer from './Components/InputSequence/InputSequenceContainer';\r\nimport FunctionPreviewContainer from './Components/FunctionPreview/FunctionPreviewContainer';\r\n\r\nconst Routes = () => {\r\n    return(\r\n        <Switch>\r\n            <Route \r\n                path = '/' \r\n                exact \r\n                strict\r\n            >\r\n                <PresentationPage />\r\n            </Route>\r\n            <Route\r\n                path = '/convolution-algorithms'\r\n                exact\r\n            >\r\n                <PresentationPage />\r\n            </Route>\r\n            <Route\r\n                path = '/start'\r\n                exact\r\n                strict\r\n            >\r\n                <InputSequenceContainer />\r\n            </Route>\r\n            <Route\r\n                path = '/preview'\r\n                exact\r\n                strict\r\n            >\r\n                <FunctionPreviewContainer />\r\n            </Route>\r\n            <Route\r\n                path = '/result'\r\n                exact\r\n                strict\r\n            >\r\n                <Result />\r\n            </Route>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default Routes;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n//Estilos\r\nimport './Navbar.css';\r\n\r\nconst Navbar = () => (\r\n    <nav className='navbar navbar-expand-lg sticky-top navbar-light bg-transparent'>\r\n        <Link className='navbar-brand' to='/'>Práctica 3</Link>\r\n        <button className='navbar-toggler' type='button' data-toggle='collapse' data-target='#navbarText' aria-controls='navbarText' aria-expanded='false' aria-label='Toggle navigation'>\r\n            <span className='navbar-toggler-icon'></span>\r\n        </button>\r\n        <div className='collapse navbar-collapse text-center' id='navbarText'>\r\n            <ul className='navbar-nav mr-auto'>\r\n            <li className='nav-item active'>\r\n                <Link className='nav-link' to='/start'>Inicio</Link>\r\n            </li>\r\n            <li className='nav-item'>\r\n                <Link className='nav-link' to='/preview'>Preview</Link>\r\n            </li>\r\n            <li className='nav-item'>\r\n                <Link className='nav-link' to='/result'>Resultado</Link>\r\n            </li>\r\n            </ul>\r\n        </div>\r\n    </nav>\r\n);\r\n\r\nexport default Navbar;","import React, { useState } from 'react';\r\nimport AlertContext from '../Context/AlertContext';\r\n\r\n\r\nconst withAlertProvider = WrappedComponent => {\r\n    const initialAlertState = {\r\n        type: '',\r\n        message: '',\r\n        duration: 3000\r\n    }\r\n    const WithAlertProvider = props => {\r\n        const alert = useState(initialAlertState);\r\n        return(\r\n            <AlertContext.Provider value = { alert }>\r\n                <WrappedComponent\r\n                    { ...props }\r\n                />\r\n            </AlertContext.Provider>\r\n        )\r\n    }\r\n\r\n    return WithAlertProvider;\r\n}\r\n\r\nexport default withAlertProvider;","import React, { useState } from 'react';\r\nimport ResultContext from '../ResultContext';\r\n\r\nconst withResultProvider = WrappedComponent => {\r\n    let initialState = {\r\n        operation: '',\r\n        inputSequence: [],\r\n        resultSequence: []\r\n    }\r\n    const WithResultProvider = props => {\r\n        let result = useState(initialState);\r\n\r\n        return(\r\n            <ResultContext.Provider value = { result }>\r\n                <WrappedComponent\r\n                    { ...props }\r\n                />\r\n            </ResultContext.Provider>\r\n        )\r\n    }\r\n\r\n    return WithResultProvider;\r\n}\r\n\r\nexport default withResultProvider;","import React, { useState } from 'react';\r\n//Contexto\r\nimport SequenceContext from '../SequenceContext';\r\n//Clase\r\nimport AlgorithmFactory from '../../../Classes/FFT/AlgorithmFactory';\r\n\r\nconst withContextProvider = WrappedComponent => {\r\n    let initialState = {\r\n        sequence: '',\r\n        operation: AlgorithmFactory.FFT,\r\n        algorithmInstance: null\r\n    };\r\n\r\n    const WithContextProvider = props => {\r\n        const sequence = useState(initialState)\r\n\r\n        return(\r\n            <SequenceContext.Provider value = { sequence }>\r\n                <WrappedComponent\r\n                    { ...props }\r\n                />\r\n            </SequenceContext.Provider>\r\n        )\r\n    }\r\n    return WithContextProvider;\r\n}\r\n\r\nexport default withContextProvider;","import React, { useState, Fragment } from 'react';\r\n//Componentes\r\nimport Alert from './Components/Alerts/Alert';\r\nimport Routes from './Routes';\r\nimport Navbar from './Components/Layout/Navigation/Navbar';\r\n//HOCS\r\nimport withAlertProvider from './Components/Alerts/HOC/withAlertProvider';\r\nimport withResultProvider from './Context/Result/HOC/withResultProvider';\r\nimport withContextProvider from './Context/InputSequence/HOC/withContextProvider';\r\n//Estilos\r\nimport './App.css';\r\n\r\n\r\n\r\n\r\n\r\nconst App = () => {\r\n    return(\r\n        <Fragment>\r\n            <Navbar />\r\n            <Alert />\r\n            <Routes />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default withAlertProvider(withContextProvider(withResultProvider(App)));","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n  HashRouter as Router\r\n} from 'react-router-dom';\r\n//Librerias adicionales\r\nimport $ from 'jquery';\r\nimport Popper from 'popper.js';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\n//Componentes\r\nimport App from './App';\r\n//Estilos\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nlet WithRouter = <Router><App /></Router>;\r\n\r\nReactDOM.render(WithRouter, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}